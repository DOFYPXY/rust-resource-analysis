(** THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS *)
(** [decreasing_count] *)
module DecreasingCount
open Primitives

#set-options "--z3rlimit 50 --fuel 1 --ifuel 1"

(** The state type used in the state-error monad *)
assume type state : Type0

(** [decreasing_count::tick] *)
let tick_fwd : result unit = Return ()

(** [decreasing_count::f] *)
let f_fwd (x : u32) : result u32 = Return 0

(** [decreasing_count::fpow] *)
let rec fpow_fwd (n : u32) : result u32 =
  if n > 0
  then begin
    let* _ = tick_fwd in
    let* i = u32_sub n 1 in
    let* i0 = fpow_fwd i in
    f_fwd i0 end
  else Return 0

